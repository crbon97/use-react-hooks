{"version":3,"sources":["logo.svg","components/MyCounter/index.jsx","components/MyForm/RadioInput.jsx","components/MyForm/TextInput.jsx","components/MyForm/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","value","reducer","state","action","actionValue","type","Object","objectSpread","MyCounterHOC","dispatch","react_default","a","createElement","className","onClick","CounterContext","React","createContext","CounterProvider","_ref","children","contextValue","useReducer","Provider","MyCounterContext","_useCount","useContext","_useCount2","slicedToArray","MyCounter","_useReducer","_useReducer2","RadioInput","checked","onChange","rest","objectWithoutProperties","assign","TextInput","onChangeText","firstName","lastName","gender","payload","MyForm","handleChangeText","e","_e$target","target","name","defineProperty","MyForm_TextInput","MyForm_RadioInput","JSON","stringify","App","src","logo","alt","href","rel","components_MyCounter","components_MyForm","MyCounter_CounterProvider","MyCounter_MyCounterContext","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9771cd66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import './style.css';\n\nimport React, { useContext, useReducer } from 'react';\n\nconst initialState = {\n\tvalue: 1\n};\n\nconst reducer = (state, action) => {\n\tconst { value } = state;\n\tconst { value: actionValue } = action;\n\tswitch (action.type) {\n\t\tcase 'set':\n\t\t\treturn { ...initialState, value: actionValue };\n\t\tcase 'decrement':\n\t\t\treturn { ...state, value: value - 1 };\n\t\tcase 'increment':\n\t\t\treturn { ...state, value: value + 1 };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst MyCounterHOC = (state, dispatch) => {\n\tconst { value } = state;\n\treturn (\n\t\t<div className=\"button-group\">\n\t\t\t<button className=\"button button--left\" onClick={() => dispatch({ type: 'decrement' })}>\n\t\t\t\t-\n\t\t\t</button>\n\t\t\t<div className=\"value\">{value}</div>\n\t\t\t<button className=\"button button--right\" onClick={() => dispatch({ type: 'increment' })}>\n\t\t\t\t+\n\t\t\t</button>\n\t\t\t<button className=\"button button--full-width\" onClick={() => dispatch({ type: 'set', value: 0 })}>\n\t\t\t\treset\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nconst MyCounter = () => {\n\tconst [ state, dispatch ] = useReducer(reducer, initialState);\n\treturn MyCounterHOC(state, dispatch);\n};\n\n// with Context\nconst CounterContext = React.createContext();\nconst CounterProvider = ({ children }) => {\n\tconst contextValue = useReducer(reducer, initialState);\n\treturn <CounterContext.Provider value={contextValue}>{children}</CounterContext.Provider>;\n};\n\nconst useCount = () => {\n\tconst contextValue = useContext(CounterContext);\n\treturn contextValue;\n};\n\nconst MyCounterContext = () => {\n\tconst [ state, dispatch ] = useCount();\n\treturn MyCounterHOC(state, dispatch);\n};\n\nexport { MyCounterContext, CounterProvider };\nexport default MyCounter;\n","import React from 'react';\n\nconst RadioInput = ({ value, checked, onChange, ...rest }) => (\n\t<input type=\"radio\" value={value} checked={checked} onChange={onChange} {...rest} />\n);\n\nexport default RadioInput;\n","import React from 'react';\n\nconst TextInput = ({ value, onChangeText, ...rest }) => (\n\t<input type=\"text\" value={value} onChange={onChangeText} {...rest} />\n);\n\nexport default TextInput;\n","import './style.css';\n\nimport React, { useReducer } from 'react';\n\nimport RadioInput from './RadioInput';\nimport TextInput from './TextInput';\n\nconst initialState = {\n\tfirstName: '',\n\tlastName: '',\n\tgender: 'male'\n};\nconst reducer = (state, action) => {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase 'set':\n\t\t\treturn { ...state, ...payload };\n\t\tcase 'reset':\n\t\t\treturn { ...initialState };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst MyForm = () => {\n\tconst [ state, dispatch ] = useReducer(reducer, initialState);\n\tconst { firstName, lastName, gender } = state;\n\n\tconst handleChangeText = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tdispatch({ type: 'set', payload: { [name]: value } });\n\t};\n\n\tconst handleReset = () => {\n\t\tdispatch({ type: 'reset' });\n\t};\n\treturn (\n\t\t<div className=\"my-form\">\n\t\t\t<div className=\"field-group\">\n\t\t\t\t<div className=\"field-label\">First Name:</div>\n\t\t\t\t<TextInput className=\"field-text\" name=\"firstName\" value={firstName} onChangeText={handleChangeText} />\n\t\t\t</div>\n\t\t\t<div className=\"field-group\">\n\t\t\t\t<span className=\"field-label\">Last Name:</span>\n\t\t\t\t<TextInput className=\"field-text\" name=\"lastName\" value={lastName} onChangeText={handleChangeText} />\n\t\t\t</div>\n\t\t\t<div className=\"field-group\">\n\t\t\t\t<div className=\"field-label\">Gender:</div>\n\t\t\t\t<div className=\"field-radio-group\">\n\t\t\t\t\t<RadioInput\n\t\t\t\t\t\tclassName=\"field-radio\"\n\t\t\t\t\t\tname=\"gender\"\n\t\t\t\t\t\tvalue=\"male\"\n\t\t\t\t\t\tonChange={handleChangeText}\n\t\t\t\t\t\tchecked={gender === 'male'}\n\t\t\t\t\t/>{' '}\n\t\t\t\t\tMale\n\t\t\t\t\t<RadioInput\n\t\t\t\t\t\tclassName=\"field-radio\"\n\t\t\t\t\t\tname=\"gender\"\n\t\t\t\t\t\tvalue=\"female\"\n\t\t\t\t\t\tonChange={handleChangeText}\n\t\t\t\t\t\tchecked={gender === 'female'}\n\t\t\t\t\t/>{' '}\n\t\t\t\t\tFemale\n\t\t\t\t\t<RadioInput\n\t\t\t\t\t\tclassName=\"field-radio\"\n\t\t\t\t\t\tname=\"gender\"\n\t\t\t\t\t\tvalue=\"other\"\n\t\t\t\t\t\tonChange={handleChangeText}\n\t\t\t\t\t\tchecked={gender === 'other'}\n\t\t\t\t\t/>{' '}\n\t\t\t\t\tOther\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>{JSON.stringify(state)}</p>\n\t\t\t\t<button className=\"btnReset\" onClick={handleReset}>\n\t\t\t\t\tReset\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MyForm;\n","import './App.css';\n\nimport MyCounter, { CounterProvider, MyCounterContext } from './components/MyCounter';\nimport React, { Component } from 'react';\n\nimport MyForm from './components/MyForm';\nimport logo from './logo.svg';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t<p>\n\t\t\t\t\t\tEdit <code>src/App.js</code> and save to reload.\n\t\t\t\t\t</p>\n\t\t\t\t\t<a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\tLearn React\n\t\t\t\t\t</a>\n\t\t\t\t</header>\n\t\t\t\t<main className=\"fullHeight\">\n\t\t\t\t\t<p>Hello, some simple demo with React Hooks!</p>\n\t\t\t\t\t1. <code>useReducer</code>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tCounter\n\t\t\t\t\t\t<MyCounter />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tMy Form\n\t\t\t\t\t\t<MyForm />\n\t\t\t\t\t</div>\n\t\t\t\t\t2. <code>useContext</code>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tCounter\n\t\t\t\t\t\t<CounterProvider>\n\t\t\t\t\t\t\t<MyCounterContext />\n\t\t\t\t\t\t\t<MyCounterContext />\n\t\t\t\t\t\t</CounterProvider>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}